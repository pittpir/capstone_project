{"version":3,"sources":["pics/pubg_long.png","pics/pubg.jpg","pics/pubg_long_banner.jpg","routes/Home.js","routes/sports.js","routes/gamesList.js","routes/games.js","routes/gamesTitlesList.js","routes/gamesTitles.js","routes/moviesList.js","routes/movies.js","routes/moviesTitlesList.js","routes/moviesTitles.js","routes/Signup.js","routes/Notfound.js","routes/Login.js","routes/Routes.js","routes/Main.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","username","Component","routes_sports","GamesList","_this","gamesList","games","map","item","index","Comment","key","Avatar","src","avatar","Content","Author","as","author","Metadata","date","Text","text","Actions","Action","onClick","reply","bind","isComment","Form","TextArea","label","type","placeholder","name","Button","content","labelPosition","icon","primary","Games","handleOnChange","event","setState","defineProperty","currentTarget","value","handleOnSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","today","newobj","options","wrap","_context","prev","next","preventDefault","state","textarea","Date","toLocaleDateString","text_author","message","method","headers","Content-Type","body","JSON","stringify","fetch","concat","match","params","topicId","sent","getGameComments","stop","_x","apply","arguments","handleReply","_ref2","_callee2","stats","obj","newarray","_context2","splice","_x2","_x3","_callee3","returnData","data","array","_context3","json","push","title","t0","console","log","getOpComments","_callee4","_context4","opavatar","optext","opdate","Container","Grid","Row","centered","Column","width","Group","Header","dividing","gamesList_GamesList","logged","onSubmit","onChange","GamesTitleList","gamesTitleList","gamesT","List","Item","Link","to","id","divided","relaxed","GamesTitles","texttitle","gamesTitle","getMovieTitles","_id","columns","pubg_image_long","alt","height","gamesTitlesList_GamesTitleList","Input","pubg_image_square","pubg_long_banner","MoviesList","moviesList","movies","Movies","getMovieComments","moviesList_MoviesList","MoviesTitleList","moviesTitleList","moviesT","MoviesTitles","moviesTitle","moviesTitlesList_MoviesTitleList","Signup","redirectToReferrer","email","password","formErrors","emailError","usernameError","isSignedUp","passwordError","handleChange","handleSubmit","error","length","Signup_now","from","location","pathname","_this$state","Redirect","autoComplete","Segment","basic","textAlign","color","Notfound","Login","isAuthenticated","login","fakeAuth","authenticate","cb","setTimeout","signout","PrivateRouteB","_ref4","component","cProps","rest","objectWithoutProperties","Route","assign","render","Routes","childProps","Switch","Login_PrivateRouteB","path","exact","Sports","NotFound","Main","handleItemClick","activeItem","user","handleLogout","out","visible","signup","talk_sports","home_main","Fragment","Navbar","expand","variant","Transition","animation","duration","Brand","active","undefined","Toggle","aria-controls","Collapse","Nav","fill","NavItem","inverted","vertical","stackable","Popup","trigger","circular","href","position","target","App","Main_Main","ReactDOM","BrowserRouter","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.100cf8c1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pubg_long.2d4d487f.png\";","module.exports = __webpack_public_path__ + \"static/media/pubg.84d36e8e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pubg_long_banner.31826b84.jpg\";","\nimport '../css/home.css';\n\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect, withRouter } from \"react-router-dom\";\nimport { Form, Container, Button, Grid, Segment } from 'semantic-ui-react'\nimport \"semantic-ui-css/semantic.min.css\";\n\n\nexport default class Home extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n}\n\n   \n\n  render() {\n\n            return (\n     \n   <div className=\"home_page\">\n    <h3>Home Page!</h3>\n    {this.props.username ? \n    <div>\n    <h3>You are logged in as: {this.props.username}</h3>\n    <h3>You are free to post to the boards</h3>\n    </div>\n    : <div></div>\n\t}\n  </div>\n   \n)\n\n}\n\n}\n\n\n//react-facebook-login\n\n\n\n\n","import React from 'react';\nimport '../css/sports.css';\n\nexport default () =>\n  <div className=\"sports_page\">\n    <h3>Back -- Back -- Back -- Gone!</h3>\n  </div>;","import React, { Component } from 'react';\nimport { Button, Comment, Form, Header, Container, Grid } from 'semantic-ui-react'\nimport '../css/games.css'\n\nexport default class GamesList extends Component {\n\n\n\n  render() {\n        const gamesList = this.props.games.map((item, index) => {\n            return (\n     \n            \t<Comment className=\"comments_grid_column\" key={index}>\n      \t\t\t<Comment.Avatar src={item.avatar} />\n      \t\t\t<Comment.Content>\n        \t\t\t<Comment.Author as='a'>Author: {item.author}</Comment.Author>\n        \t\t\t<Comment.Metadata>\n          \t\t\t\t<div>{item.date}</div>\n        \t\t\t</Comment.Metadata>\n        \t\t<Comment.Text className='textarea'>{item.text}</Comment.Text>\n        \t\t<Comment.Actions>\n          \t\t<Comment.Action onClick={this.props.reply.bind(null,index,item)}>Reply</Comment.Action>\n        \t\t</Comment.Actions>\n      \t\t\t</Comment.Content>\n   \n\n    {item.isComment ? \n\n\t    <Form reply>\n\t      <Form.TextArea \n\t\t\tlabel=\"Type Comment Here...\" \n\t        type=\"text\" \n\t        placeholder='Add Comment' \n\t        name=\"textarea\" \n\t        \n\t      />\n\t      <Button content='Add Reply' labelPosition='left' icon='edit' primary />\n\t    </Form>\n\t    : <div></div>\n\t\t}\n\t\t </Comment>\n\n            )\n        })\n\n    return (\n <div> {gamesList} </div>\n\n)\n\n}\n\n}\n","import React, { Component } from 'react';\nimport { Button, Comment, Form, Header, Container, Grid } from 'semantic-ui-react'\nimport '../css/games.css'\nimport GamesList from './gamesList'\n\n\nexport default class Games extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state ={\n\t\t\ttextarea: '',\n\t\t\ttitle: '',\n\t\t\tauthor:'Default',\n\t\t\topavatar:'https://react.semantic-ui.com/images/avatar/small/elliot.jpg',\n\t\t\toptext:'Default',\n\t\t\topdate: '',\n\t\t\tgames: [\n\t\t\t{\n\t\t\t\tauthor: \"Chris\",\n\t\t\t\tavatar: 'https://react.semantic-ui.com/images/avatar/small/elliot.jpg',\n\t\t\t\tdate: 'Nov 11 2018',\n\t\t\t\ttext: 'Yo!!!!',\n\t\t\t\tisComment: false\n\t\t\t},\n\t\t\t\t{\n\t\t\t\tauthor: \"Chris\",\n\t\t\t\tavatar: 'https://react.semantic-ui.com/images/avatar/small/elliot.jpg',\n\t\t\t\tdate: 'Nov 11 2018',\n\t\t\t\ttext: 'Yo!!!!',\n\t\t\t\tisComment: false\n\t\t\t},\n\n\n\n\n\t\t\t\t]\n\t\t}\n\t}\n\nhandleOnChange = (event) => {\n    this.setState({\n      [event.currentTarget.name]: event.currentTarget.value\n    })\n  }\n\n\thandleOnSubmit = async (event) => {\n    \tevent.preventDefault();\n    \t//console.log(this.state.textarea)\n    \tlet obj = {\n    \t\tauthor: 'Cassie',\n    \t\tavatar: 'https://react.semantic-ui.com/images/avatar/small/elliot.jpg',\n    \t\tdate: 'Nov 11 2018',\n    \t\ttext: this.state.textarea\n    \t}\n    \t\n      let today = new Date().toLocaleDateString()\n\n      let newobj = {\n            \"avatar\": 'https://react.semantic-ui.com/images/avatar/small/elliot.jpg',\n            \"date\": today,\n            \"text_author\": this.props.username,\n            \"message\": this.state.textarea\n          }  \n\n\n      const options = {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json; charset=UTF-8',\n          }, \n          body: JSON.stringify(newobj)\n          \n      } \n//      let url = `https://swgoh.gg/api/player/${code}/?format=json`\n//      let req = new Request(url); \n      let returnData = \"\";\n      returnData = await fetch(`http://localhost:4000/games/update/${this.props.match.params.topicId}`,options);\n      //console.log(returnData)\n\n      this.setState({\n//       texttitle: '',\n        textarea:''\n\n      })\n\n\t  this.getGameComments();\n\n\n\n //   \tlet newarray = this.state.movies;\n //   \tnewarray.push(obj)\n\n //   \tthis.setState({\n//    \t\tmovies: newarray,\n//    \t\ttextarea: ''\n\n //   \t})\n\n\t}\n\t\n\t//updateDog = (index,item)\n\thandleReply = async (index,stats) => {\n    \t//event.preventDefault();\n    \t//console.log(index)\n    \tlet obj = stats;\n    \tobj.isComment = true;\n\t\t\n\t\tlet newarray = this.state.games;\n    \tnewarray.splice(index,1,obj)\n\n\t\tthis.setState({\n    \t\tgames: newarray,\n    \t\ttextarea: ''\n\n    \t})\n\n\n \t}\n\ngetGameComments = async () => {\n    try {\n\n      const options = {\n          method: 'get',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n          },          \n          \n      } \n\n      let returnData = \"\";\n      returnData = await fetch(`http://localhost:4000/games/getcomments/${this.props.match.params.topicId}`);\n      const data = await returnData.json();\n      \n      //console.log(data.text);\n      let array = []\n      data.text.map((item,index) => {\n        \n \t\tlet obj = \n\t\t\t{\n\t\t\t\tauthor: item.author,\n\t\t\t\tavatar: 'https://react.semantic-ui.com/images/avatar/small/elliot.jpg',\n\t\t\t\tdate: item.date,\n\t\t\t\ttext: item.message,\n\t\t\t\tisComment: false\n\t\t\t}\n          array.push(obj)\n        });\n\n      this.setState({\n        games: array,\n        title: data.title\n      })\n\n    } catch(err) {\n      console.log(\"Error found\", err.name, err.message)\n    }\n\n}\n\ngetOpComments = async () => {\n    try {\n\n      const options = {\n          method: 'get',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n          },          \n          \n      } \n\n      let returnData = \"\";\n      returnData = await fetch(`http://localhost:4000/games/getcomments/${this.props.match.params.topicId}`);\n      const data = await returnData.json();\n\n      this.setState({\n        author: data.author,\n\t\topavatar: 'https://react.semantic-ui.com/images/avatar/small/elliot.jpg',\n\t\toptext: data.message,\n\t\topdate: data.date\n      })\n\n    } catch(err) {\n      console.log(\"Error found\", err.name, err.message)\n    }\n\n}\n\n\n\n\n\n  \n  componentDidMount(){\n    this.getOpComments()\n    this.getGameComments()\n  } \n\n\n\n\n\n  render() {\n   \n\n    return (\n      <section className=\"games_page\">\n        <h1>Video Games Page</h1>\n         <h2 className=\"h2_games\">{this.state.title}</h2>\n         \n\n         <Container className=\"op_container\">\n            <Grid className=\"op_grid\" >\n            <Grid.Row centered>\n              <Grid.Column  className=\"op_grid_column\" width={10}> \n\n  <Comment.Group >\n            \t<Comment>\n      \t\t\t<Comment.Avatar src={this.state.opavatar} />\n      \t\t\t<Comment.Content>\n        \t\t\t<Comment.Author as='a'>Author: {this.state.author}</Comment.Author>\n        \t\t\t<Comment.Metadata>\n          \t\t\t\t<div>{this.state.opdate}</div>\n        \t\t\t</Comment.Metadata>\n        \t\t<Comment.Text className='textarea'>{this.state.optext}</Comment.Text>\n      \t\t\t</Comment.Content>\n      \t\t\t</Comment>\n      \t\t\t  </Comment.Group>\n  </Grid.Column>\n  </Grid.Row>\n  </Grid>\n  </Container>  \n\n\n         <Container>\n            <Grid>\n            <Grid.Row centered>\n              <Grid.Column  width={10}>\n\n\n  <Comment.Group>\n    <Header as='h3' dividing>\n      User Comments\n    </Header>\n\n\t<GamesList games={this.state.games} reply={this.handleReply}/>\n\n\n{this.props.logged ? \n    <Form onSubmit={this.handleOnSubmit} reply>\n      <Form.TextArea \n\t\tlabel=\"Type Comment Here...\" \n        type=\"text\" \n        placeholder='Add Comment' \n        name=\"textarea\" \n        value={this.state.textarea} \n        onChange={this.handleOnChange}\n      />\n      <Button content='Add Reply' labelPosition='left' icon='edit' primary />\n    </Form> \n    : <div></div>\n}\t\t\n\n\n  </Comment.Group>\n  </Grid.Column>\n  </Grid.Row>\n  </Grid>\n         </Container>   \n\n      </section>\n    );\n  }\n}\n\n","import React, { Component } from 'react';\nimport { List, Icon } from 'semantic-ui-react'\nimport { Route, Link } from \"react-router-dom\";\nimport '../css/games.css'\n\nimport Games from './games'\n\nexport default class GamesTitleList extends Component {\n\n\n\n  render() {\n\n\n        const gamesTitleList = this.props.gamesT.map((item, index) => {\n            return (\n     \n\n  \n    <List.Item className=\"links\" key={index}>\n      <List.Content className=\"links\">\n        <List.Header className=\"links\" as={Link} to={`/games/${item.id}`}>{item.title}</List.Header>\n      </List.Content>\n    </List.Item>\n\n\n            )\n        })\n\n\n\n\n\n    return (\n            <div>\n            <List divided relaxed className=\"cow\">\n                {gamesTitleList}\n            </List>\n            \n              \n</div>\n\n)\n\n}\n\n}\n","import React, { Component } from 'react';\nimport { Button, Comment, Form, Header, Container, Grid } from 'semantic-ui-react'\nimport '../css/games.css'\nimport GamesTitleList from './gamesTitlesList'\nimport Routes from \"./Routes\";\nimport pubg_image_long from \"../pics/pubg_long.png\"\nimport pubg_image_square from \"../pics/pubg.jpg\"\nimport pubg_long_banner from \"../pics/pubg_long_banner.jpg\"\n\n\nexport default class GamesTitles extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state ={\n\t\t\ttexttitle: '',\n      textarea: '',\n\t\t\tgamesTitle: [\n\t\t\t{\n\t\t\t\ttitle: \"Avengers\",\n\t\t\t\tid: 0\n\t\t\t},\n\t\t\t\t{\n\t\t\t\ttitle: \"Snow White\",\n        id: 1\n\t\t\t},\n\n\n\n\n\t\t\t\t]\n\t\t}\n\t}\n\nhandleOnChange = (event) => {\n    this.setState({\n      [event.currentTarget.name]: event.currentTarget.value\n    })\n  }\n\n\thandleOnSubmit = async (event) => {\n    \tevent.preventDefault();\n    \t//console.log(this.state.texttitle)\n    \tlet obj = {\n    \t\ttitle: this.state.texttitle,\n    \t\tid: 2,\n    \t}\n    \tlet newarray = this.state.gamesTitle;\n    \tnewarray.push(obj)\n\n      let today = new Date().toLocaleDateString()\n\n      let newobj = {\n            \"title\": this.state.texttitle,\n            \"author\": this.props.username,\n            \"message\": this.state.textarea,\n            \"date\": today\n          }  \n\n\n      const options = {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json; charset=UTF-8',\n          }, \n          body: JSON.stringify(newobj)\n          \n      } \n//      let url = `https://swgoh.gg/api/player/${code}/?format=json`\n//      let req = new Request(url); \n      let returnData = \"\";\n      returnData = await fetch('http://localhost:4000/games/set',options);\n      //console.log(returnData)\n\n      this.setState({\n        texttitle: '',\n        textarea:''\n\n      })\n\n      this.getMovieTitles()\n\t}\n\t\n\t//updateDog = (index,item)\n\thandleReply = async (index,stats) => {\n    \t//event.preventDefault();\n    \t//console.log(index)\n    \tlet obj = stats;\n    \tobj.isComment = true;\n\t\t\n\t\tlet newarray = this.state.games;\n    \tnewarray.splice(index,1,obj)\n\n\t\tthis.setState({\n    \t\tgamesTitle: newarray,\n    \t\ttextarea: ''\n\n    \t})\n\n\n \t}\n  \n\ngetMovieTitles = async () => {\n    try {\n\n      const options = {\n          method: 'get',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n          },          \n          \n      } \n//      let url = `https://swgoh.gg/api/player/${code}/?format=json`\n//      let req = new Request(url); \n      let returnData = \"\";\n      returnData = await fetch('http://localhost:4000/games/get');\n      //returnData = await fetch(`https://swgoh.gg/api/ships/?format=json`, { mode: 'no-cors'});\n      //const response = await (fetch(req));\n      //const data = await response.json();\n      const data = await returnData.json();\n      //console.log(data);\n      //data.data.rank2 = data.data.fleet_arena.rank\n      //this.setState({stats: data.data});\n     \n\n      //this.setState({quakes: data.features});\n      //console.log(data.data.fleet_arena.rank)\n      //console.log(...data.features[0].geometry.coordinates)\n      //greatPlaceCoords: {lat: 31.2682, lng: -96.74295}\n\n      let array = []\n      data.map((item,index) => {\n        \n          let obj = \n          {\n            title: item.title,\n            id: item._id\n          }\n          array.push(obj)\n        });\n\n      this.setState({\n        gamesTitle: array\n      })\n\n\n\n    } catch(err) {\n      console.log(\"Error found\", err.name, err.message)\n\n    }\n\n}\n\n\n\n  \n  componentDidMount(){\n    this.getMovieTitles()\n  } \n\n\n\n\n\n\n\n\n  render() {\n    //console.log(this.props[0].logged)\n            const moo = {\n      dog: 5,\n      cat: \"mouse\"\n    };\n\n    return (\n      <section className=\"games_page\">\n        <h1>Video Games Page</h1>\n        <h2>List of Topics</h2>\n         \n            <Grid >\n            <Grid.Row centered columns={4}>\n   <Grid.Column >\n  \n  <img className=\"pics\" src={pubg_image_long} alt=\"Pub G Long Add\" height=\"500\" width=\"300\" />\n\n\n\n  </Grid.Column>  \n              <Grid.Column width={8}>\n\n\n  <Comment.Group>\n    <Header as='h3' dividing>\n    </Header>\n  <GamesTitleList gamesT={this.state.gamesTitle} />\n\t\n{this.props.logged ? \n    <Form onSubmit={this.handleOnSubmit} >\n      <Form.Input\n\t\t    label=\"Add New Topic Title Here...\" \n        type=\"text\" \n        placeholder='Add Topic' \n        name=\"texttitle\" \n        value={this.state.texttitle} \n        onChange={this.handleOnChange}\n      />\n      <Form.TextArea \n        label=\"Type Comment Here...\" \n        type=\"text\" \n        placeholder='Add Comment' \n        name=\"textarea\" \n        value={this.state.textarea} \n        onChange={this.handleOnChange}\n      />\n      <Button content='Add Topic' labelPosition='left' icon='edit' primary />\n    </Form> \n    : <div></div>\n}\t\n\n  \n\n  </Comment.Group>\n  </Grid.Column>\n  <Grid.Column >\n  <img className=\"pics\" src={pubg_image_square} alt=\"Pub G Square Ad\" height=\"300\" width=\"300\" />\n\n  </Grid.Column>  \n  </Grid.Row>\n  </Grid>\n        \n      <img className=\"pics\" src={pubg_long_banner} alt=\"Pub G Long Add\" height=\"200\" width=\"1000\" />\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Button, Comment, Form, Header, Container, Grid } from 'semantic-ui-react'\nimport '../css/movies.css'\n\nexport default class MoviesList extends Component {\n\n\n\n  render() {\n        const moviesList = this.props.movies.map((item, index) => {\n            return (\n     \n            \t<Comment className=\"comments_grid_column\" key={index}>\n      \t\t\t<Comment.Avatar src={item.avatar} />\n      \t\t\t<Comment.Content>\n        \t\t\t<Comment.Author as='a'>Author: {item.author}</Comment.Author>\n        \t\t\t<Comment.Metadata>\n          \t\t\t\t<div>{item.date}</div>\n        \t\t\t</Comment.Metadata>\n        \t\t<Comment.Text className='textarea'>{item.text}</Comment.Text>\n        \t\t<Comment.Actions>\n          \t\t<Comment.Action onClick={this.props.reply.bind(null,index,item)}>Reply</Comment.Action>\n        \t\t</Comment.Actions>\n      \t\t\t</Comment.Content>\n   \n\n    {item.isComment ? \n\n\t    <Form reply>\n\t      <Form.TextArea \n\t\t\tlabel=\"Type Comment Here...\" \n\t        type=\"text\" \n\t        placeholder='Add Comment' \n\t        name=\"textarea\" \n\t        \n\t      />\n\t      <Button content='Add Reply' labelPosition='left' icon='edit' primary />\n\t    </Form>\n\t    : <div></div>\n\t\t}\n\t\t </Comment>\n\n            )\n        })\n\n    return (\n <div> {moviesList} </div>\n\n)\n\n}\n\n}\n\n\n\n\n/*\n\n\n\n<Comment key={index}>\n      <Comment.Avatar src={item.avatar} />\n      <Comment.Content>\n        <Comment.Author as='a'>{item.author}</Comment.Author>\n        <Comment.Metadata>\n          <div>{item.date}</div>\n        </Comment.Metadata>\n        <Comment.Text>{item.text}</Comment.Text>\n        <Comment.Actions>\n          <Comment.Action>Reply</Comment.Action>\n        </Comment.Actions>\n      </Comment.Content>\n    </Comment>\n\n\n    */","import React, { Component } from 'react';\nimport { Button, Comment, Form, Header, Container, Grid } from 'semantic-ui-react'\nimport '../css/movies.css'\nimport MoviesList from './moviesList'\n\n\nexport default class Movies extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state ={\n\t\t\ttextarea: '',\n\t\t\ttitle: '',\n\t\t\tauthor:'Default',\n\t\t\topavatar:'https://react.semantic-ui.com/images/avatar/small/elliot.jpg',\n\t\t\toptext:'Default',\n\t\t\topdate: '',\n\t\t\tmovies: [\n\t\t\t{\n\t\t\t\tauthor: \"Chris\",\n\t\t\t\tavatar: 'https://react.semantic-ui.com/images/avatar/small/elliot.jpg',\n\t\t\t\tdate: 'Nov 11 2018',\n\t\t\t\ttext: 'Yo!!!!',\n\t\t\t\tisComment: false\n\t\t\t},\n\t\t\t\t{\n\t\t\t\tauthor: \"Chris\",\n\t\t\t\tavatar: 'https://react.semantic-ui.com/images/avatar/small/elliot.jpg',\n\t\t\t\tdate: 'Nov 11 2018',\n\t\t\t\ttext: 'Yo!!!!',\n\t\t\t\tisComment: false\n\t\t\t},\n\n\n\n\n\t\t\t\t]\n\t\t}\n\t}\n\nhandleOnChange = (event) => {\n    this.setState({\n      [event.currentTarget.name]: event.currentTarget.value\n    })\n  }\n\n\thandleOnSubmit = async (event) => {\n    \tevent.preventDefault();\n    \t//console.log(this.state.textarea)\n    \tlet obj = {\n    \t\tauthor: 'Cassie',\n    \t\tavatar: 'https://react.semantic-ui.com/images/avatar/small/elliot.jpg',\n    \t\tdate: 'Nov 11 2018',\n    \t\ttext: this.state.textarea\n    \t}\n    \t\n      let today = new Date().toLocaleDateString()\n\n      let newobj = {\n            \"avatar\": 'https://react.semantic-ui.com/images/avatar/small/elliot.jpg',\n            \"date\": today,\n            \"text_author\": this.props.username,\n            \"message\": this.state.textarea\n          }  \n\n\n      const options = {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json; charset=UTF-8',\n          }, \n          body: JSON.stringify(newobj)\n          \n      } \n//      let url = `https://swgoh.gg/api/player/${code}/?format=json`\n//      let req = new Request(url); \n      let returnData = \"\";\n      returnData = await fetch(`http://localhost:4000/movies/update/${this.props.match.params.topicId}`,options);\n      //console.log(returnData)\n\n      this.setState({\n//       texttitle: '',\n        textarea:''\n\n      })\n\n\t  this.getMovieComments();\n\n\n\n //   \tlet newarray = this.state.movies;\n //   \tnewarray.push(obj)\n\n //   \tthis.setState({\n//    \t\tmovies: newarray,\n//    \t\ttextarea: ''\n\n //   \t})\n\n\t}\n\t\n\t//updateDog = (index,item)\n\thandleReply = async (index,stats) => {\n    \t//event.preventDefault();\n    \t//console.log(index)\n    \tlet obj = stats;\n    \tobj.isComment = true;\n\t\t\n\t\tlet newarray = this.state.movies;\n    \tnewarray.splice(index,1,obj)\n\n\t\tthis.setState({\n    \t\tmovies: newarray,\n    \t\ttextarea: ''\n\n    \t})\n\n\n \t}\n\ngetMovieComments = async () => {\n    try {\n\n      const options = {\n          method: 'get',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n          },          \n          \n      } \n\n      let returnData = \"\";\n      returnData = await fetch(`http://localhost:4000/movies/getcomments/${this.props.match.params.topicId}`);\n      const data = await returnData.json();\n      \n      //console.log(data.text);\n      let array = []\n      data.text.map((item,index) => {\n        \n \t\tlet obj = \n\t\t\t{\n\t\t\t\tauthor: item.author,\n\t\t\t\tavatar: 'https://react.semantic-ui.com/images/avatar/small/elliot.jpg',\n\t\t\t\tdate: item.date,\n\t\t\t\ttext: item.message,\n\t\t\t\tisComment: false\n\t\t\t}\n          array.push(obj)\n        });\n\n      this.setState({\n        movies: array,\n        title: data.title\n      })\n\n    } catch(err) {\n      console.log(\"Error found\", err.name, err.message)\n    }\n\n}\n\ngetOpComments = async () => {\n    try {\n\n      const options = {\n          method: 'get',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n          },          \n          \n      } \n\n      let returnData = \"\";\n      returnData = await fetch(`http://localhost:4000/movies/getcomments/${this.props.match.params.topicId}`);\n      const data = await returnData.json();\n\n      this.setState({\n        author: data.author,\n\t\topavatar: 'https://react.semantic-ui.com/images/avatar/small/elliot.jpg',\n\t\toptext: data.message,\n\t\topdate: data.date\n      })\n\n    } catch(err) {\n      console.log(\"Error found\", err.name, err.message)\n    }\n\n}\n\n\n\n\n\n  \n  componentDidMount(){\n    this.getOpComments()\n    this.getMovieComments()\n  } \n\n\n\n\n\n  render() {\n   \n\n    return (\n      <section className=\"movies_page\">\n        <h1>Movies Page</h1>\n         <h2 className=\"h2_movies\">{this.state.title}</h2>\n         \n\n         <Container className=\"op_container\">\n            <Grid className=\"op_grid\" >\n            <Grid.Row centered>\n              <Grid.Column  className=\"op_grid_column\" width={10}> \n\n  <Comment.Group >\n            \t<Comment>\n      \t\t\t<Comment.Avatar src={this.state.opavatar} />\n      \t\t\t<Comment.Content>\n        \t\t\t<Comment.Author as='a'>Author: {this.state.author}</Comment.Author>\n        \t\t\t<Comment.Metadata>\n          \t\t\t\t<div>{this.state.opdate}</div>\n        \t\t\t</Comment.Metadata>\n        \t\t<Comment.Text className='textarea'>{this.state.optext}</Comment.Text>\n      \t\t\t</Comment.Content>\n      \t\t\t</Comment>\n      \t\t\t  </Comment.Group>\n  </Grid.Column>\n  </Grid.Row>\n  </Grid>\n  </Container>  \n\n\n         <Container>\n            <Grid>\n            <Grid.Row centered>\n              <Grid.Column  width={10}>\n\n\n  <Comment.Group>\n    <Header as='h3' dividing>\n      User Comments\n    </Header>\n\n\t<MoviesList movies={this.state.movies} reply={this.handleReply}/>\n\n\n{this.props.logged ? \n    <Form onSubmit={this.handleOnSubmit} reply>\n      <Form.TextArea \n\t\tlabel=\"Type Comment Here...\" \n        type=\"text\" \n        placeholder='Add Comment' \n        name=\"textarea\" \n        value={this.state.textarea} \n        onChange={this.handleOnChange}\n      />\n      <Button content='Add Reply' labelPosition='left' icon='edit' primary />\n    </Form> \n    : <div></div>\n}\t\t\n\n\n  </Comment.Group>\n  </Grid.Column>\n  </Grid.Row>\n  </Grid>\n         </Container>   \n\n      </section>\n    );\n  }\n}\n\n\n\n\n\n\n\n\n/*\n\n\n    <Comment>\n      <Comment.Avatar src='https://react.semantic-ui.com/images/avatar/small/elliot.jpg' />\n      <Comment.Content>\n        <Comment.Author as='a'>Elliot Fu</Comment.Author>\n        <Comment.Metadata>\n          <div>Yesterday at 12:30AM</div>\n        </Comment.Metadata>\n        <Comment.Text>\n          <p>This has been very useful for my research. Thanks as well!</p>\n        </Comment.Text>\n        <Comment.Actions>\n          <Comment.Action>Reply</Comment.Action>\n        </Comment.Actions>\n      </Comment.Content>\n      <Comment.Group>\n        <Comment>\n          <Comment.Avatar src='https://react.semantic-ui.com/images/avatar/small/jenny.jpg' />\n          <Comment.Content>\n            <Comment.Author as='a'>Jenny Hess</Comment.Author>\n            <Comment.Metadata>\n              <div>Just now</div>\n            </Comment.Metadata>\n            <Comment.Text>Elliot you are always so right :)</Comment.Text>\n            <Comment.Actions>\n              <Comment.Action>Reply</Comment.Action>\n            </Comment.Actions>\n          </Comment.Content>\n        </Comment>\n      </Comment.Group>\n    </Comment>\n\n    <Comment>\n      <Comment.Avatar src='https://react.semantic-ui.com/images/avatar/small/joe.jpg' />\n      <Comment.Content>\n        <Comment.Author as='a'>Joe Henderson</Comment.Author>\n        <Comment.Metadata>\n         <div>5 days ago</div>\n        </Comment.Metadata>\n        <Comment.Text>Dude, this is awesome. Thanks so much</Comment.Text>\n        <Comment.Actions>\n          <Comment.Action>Reply</Comment.Action>\n        </Comment.Actions>\n      </Comment.Content>\n    </Comment>\n\n\n\n<div id=\"respond\">\n\n  <h3>Leave a Comment</h3>\n\n  <Form action=\"post_comment.php\" method=\"post\" id=\"commentform\">\n\n    <label for=\"comment_author\" class=\"required\">Your name</label>\n    <input type=\"text\" name=\"comment_author\" id=\"comment_author\" value=\"\" tabindex=\"1\" required=\"required\">\n\n    <label for=\"email\" class=\"required\">Your email;</label>\n    <input type=\"email\" name=\"email\" id=\"email\" value=\"\" tabindex=\"2\" required=\"required\">\n\n    <label for=\"comment\" class=\"required\">Your message</label>\n    <textarea name=\"comment\" id=\"comment\" rows=\"10\" tabindex=\"4\"  required=\"required\"></textarea>\n\n   \n    <Form.Input  type=\"hidden\" name=\"comment_post_ID\" value=\"1\" id=\"comment_post_ID\" />\n    <Form.Input  name=\"submit\" type=\"submit\" value=\"Submit comment\" />\n\n  </Form>\n\n</div>\n\n\n*/","import React, { Component } from 'react';\nimport { List, Icon } from 'semantic-ui-react'\nimport { Route, Link } from \"react-router-dom\";\nimport '../css/movies.css'\n\nimport Movies from './movies'\n\nexport default class MoviesTitleList extends Component {\n\n\n\n  render() {\n\n\n        const moviesTitleList = this.props.moviesT.map((item, index) => {\n            return (\n     \n\n  \n    <List.Item className=\"links\" key={index}>\n      <List.Content className=\"links\">\n        <List.Header className=\"links\" as={Link} to={`/movies/${item.id}`}>{item.title}</List.Header>\n      </List.Content>\n    </List.Item>\n\n\n            )\n        })\n\n\n\n\n\n    return (\n            <div>\n            <List divided relaxed className=\"cow\">\n                {moviesTitleList}\n            </List>\n            \n              \n</div>\n\n)\n\n}\n\n}\n\n\n/*\n\n                <li className=\"links_list\" key={index}>    \n                    <Link className=\"links\" as={Link} to={`/movies/${item.id}`} >{item.title}</Link>\n                </li>\n\n\n*/","import React, { Component } from 'react';\nimport { Button, Comment, Form, Header, Container, Grid } from 'semantic-ui-react'\nimport '../css/movies.css'\nimport MoviesTitleList from './moviesTitlesList'\nimport Routes from \"./Routes\";\n\n\nexport default class MoviesTitles extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state ={\n\t\t\ttexttitle: '',\n      textarea: '',\n\t\t\tmoviesTitle: [\n\t\t\t{\n\t\t\t\ttitle: \"Avengers\",\n\t\t\t\tid: 0\n\t\t\t},\n\t\t\t\t{\n\t\t\t\ttitle: \"Snow White\",\n        id: 1\n\t\t\t},\n\n\n\n\n\t\t\t\t]\n\t\t}\n\t}\n\nhandleOnChange = (event) => {\n    this.setState({\n      [event.currentTarget.name]: event.currentTarget.value\n    })\n  }\n\n\thandleOnSubmit = async (event) => {\n    \tevent.preventDefault();\n    \t//console.log(this.state.texttitle)\n    \tlet obj = {\n    \t\ttitle: this.state.texttitle,\n    \t\tid: 2,\n    \t}\n    \tlet newarray = this.state.moviesTitle;\n    \tnewarray.push(obj)\n\n      let today = new Date().toLocaleDateString()\n\n      let newobj = {\n            \"title\": this.state.texttitle,\n            \"author\": this.props.username,\n            \"message\": this.state.textarea,\n            \"date\": today\n          }  \n\n\n      const options = {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json; charset=UTF-8',\n          }, \n          body: JSON.stringify(newobj)\n          \n      } \n//      let url = `https://swgoh.gg/api/player/${code}/?format=json`\n//      let req = new Request(url); \n      let returnData = \"\";\n      returnData = await fetch('http://localhost:4000/movies/set',options);\n      //console.log(returnData)\n\n      this.setState({\n        texttitle: '',\n        textarea:''\n\n      })\n\n      this.getMovieTitles()\n\t}\n\t\n\t//updateDog = (index,item)\n\thandleReply = async (index,stats) => {\n    \t//event.preventDefault();\n    \t//console.log(index)\n    \tlet obj = stats;\n    \tobj.isComment = true;\n\t\t\n\t\tlet newarray = this.state.movies;\n    \tnewarray.splice(index,1,obj)\n\n\t\tthis.setState({\n    \t\tmoviesTitle: newarray,\n    \t\ttextarea: ''\n\n    \t})\n\n\n \t}\n  \n\ngetMovieTitles = async () => {\n    try {\n\n      const options = {\n          method: 'get',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n          },          \n          \n      } \n//      let url = `https://swgoh.gg/api/player/${code}/?format=json`\n//      let req = new Request(url); \n      let returnData = \"\";\n      returnData = await fetch('http://localhost:4000/movies/get');\n      //returnData = await fetch(`https://swgoh.gg/api/ships/?format=json`, { mode: 'no-cors'});\n      //const response = await (fetch(req));\n      //const data = await response.json();\n      const data = await returnData.json();\n      //console.log(data);\n      //data.data.rank2 = data.data.fleet_arena.rank\n      //this.setState({stats: data.data});\n     \n\n      //this.setState({quakes: data.features});\n      //console.log(data.data.fleet_arena.rank)\n      //console.log(...data.features[0].geometry.coordinates)\n      //greatPlaceCoords: {lat: 31.2682, lng: -96.74295}\n\n      let array = []\n      data.map((item,index) => {\n        \n          let obj = \n          {\n            title: item.title,\n            id: item._id\n          }\n          array.push(obj)\n        });\n\n      this.setState({\n        moviesTitle: array\n      })\n\n\n\n    } catch(err) {\n      console.log(\"Error found\", err.name, err.message)\n\n    }\n\n}\n\n\n\n  \n  componentDidMount(){\n    this.getMovieTitles()\n  } \n\n\n\n\n\n\n\n\n  render() {\n    //console.log(this.props[0].logged)\n            const moo = {\n      dog: 5,\n      cat: \"mouse\"\n    };\n\n    return (\n      <section className=\"movies_page\">\n        <h1>Movies Page</h1>\n        <h2>List of Topics</h2>\n         <Container>\n            <Grid>\n            <Grid.Row centered>\n              <Grid.Column width={10}>\n\n\n  <Comment.Group>\n    <Header as='h3' dividing>\n    </Header>\n  <MoviesTitleList moviesT={this.state.moviesTitle} />\n\t\n{this.props.logged ? \n    <Form onSubmit={this.handleOnSubmit} >\n      <Form.Input\n\t\t    label=\"Add New Topic Title Here...\" \n        type=\"text\" \n        placeholder='Add Topic' \n        name=\"texttitle\" \n        value={this.state.texttitle} \n        onChange={this.handleOnChange}\n      />\n      <Form.TextArea \n        label=\"Type Comment Here...\" \n        type=\"text\" \n        placeholder='Add Comment' \n        name=\"textarea\" \n        value={this.state.textarea} \n        onChange={this.handleOnChange}\n      />\n      <Button content='Add Topic' labelPosition='left' icon='edit' primary />\n    </Form> \n    : <div></div>\n}\t\n\n  \n\n  </Comment.Group>\n  </Grid.Column>\n  </Grid.Row>\n  </Grid>\n         </Container>   \n\n      </section>\n    );\n  }\n}\n\n\n\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect, withRouter } from \"react-router-dom\";\nimport { Form, Container, Button, Grid, Segment } from 'semantic-ui-react'\nimport \"semantic-ui-css/semantic.min.css\";\nimport '../css/signup.css';\n\nexport default class Signup extends Component {\n  state = {\n    redirectToReferrer: false,\n    email: '',\n    username: '',\n      password: '',\n      formErrors: {username: '', password: ''},\n      emailError: false,\n      usernameError: false,\n      isSignedUp: false,\n      passwordError: false\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.currentTarget.name]: event.currentTarget.value\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    let error = 0;\n    let emailValid = 0;\n    let passwordValid = 0;\n     \n      if (! this.state.email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n          error = 1;\n          console.log(\"email error\")\n      }\n          //fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n        \n      if (this.state.password.length < 6) {\n          error = 1;\n          console.log(\"password error\")\n      }\n          //fieldValidationErrors.password = passwordValid ? '': ' is too short';\n         \n    if (error) {\n      this.setState({\n        emailError: true,\n        passwordError: true\n      })\n    } else {  \n      this.Signup_now()   \n    }\n  }\n\n\n\n\tSignup_now = async () => {\n\n      let newobj = {\n            \"email\": this.state.email,\n            \"username\": this.state.username,\n            \"password\": this.state.password,\n          }  \n\n\n      const options = {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json; charset=UTF-8',\n          }, \n          body: JSON.stringify(newobj)\n          \n      } \n//      let url = `https://swgoh.gg/api/player/${code}/?format=json`\n//      let req = new Request(url); \n      let returnData = \"\";\n      returnData = await fetch(\"http://localhost:4000/login/set\",options);\n      //console.log(returnData)\n\n      this.setState({\n        email: '',\n    \tusername: '',\n      \tpassword: '',\n      \tisSignedUp: true,\n      \temailError: false,\n        passwordError: false\n      })\n\n\n\n\t}\n\n\n\n\n\n  render() {\n    const { from } = this.props.location.state || { from: { pathname: \"/\" } };\n    const { redirectToReferrer, email, password, username } = this.state;\n\n    if (redirectToReferrer) {\n      return <Redirect to={from} />;\n    }\n\n    return (\n      <div className='signup_page'>\n\n{this.state.isSignedUp ? <h2>Successful Signup</h2>\n        : <h3>You must Sign Up and Login to Post Content</h3>\n\n    }\n \n         <Container>\n            <Grid>\n            <Grid.Row centered>\n              <Grid.Column width={6}>\n\n  <Form onSubmit={this.handleSubmit}>\n            <Form.Input \n              error={this.state.usernameError}\n              autoComplete=\"off\"\n              label=\"Username\" \n              type=\"text\" \n              placeholder='Username' \n              name=\"username\" \n              value={username} \n              onChange={this.handleChange} />\n\n            <Form.Input \n              error={this.state.emailError}\n              autoComplete=\"on\"\n              label=\"Email\" \n              type=\"email\" \n              placeholder='Email' \n              name=\"email\" \n              value={email} \n              onChange={this.handleChange} />\n              \n            <Form.Input\n              error={this.state.passwordError} \n              label=\"Password\" \n              type=\"password\" \n              placeholder='Password' \n              name=\"password\" \n              value={password} \n              onChange={this.handleChange} />\n <Segment basic textAlign='center'>          \n    <Button type='submit' color='blue'>Submit</Button></Segment>  \n  </Form>\n  </Grid.Column>\n  </Grid.Row>\n  </Grid>\n         </Container>      \n      </div>\n    );\n  }\n}\n\n\n\nexport {\n    \n}\n","import React from 'react';\n\nexport default () =>\n  <div className=\"NotFound\">\n    <h3>Sorry, page not found!</h3>\n  </div>;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect, withRouter } from \"react-router-dom\";\nimport { Form, Container, Button, Grid, Segment } from 'semantic-ui-react'\nimport \"semantic-ui-css/semantic.min.css\";\nimport '../css/login.css';\n\nexport default class Login extends Component {\n  state = {\n    redirectToReferrer: false,\n    username: '',\n    isAuthenticated: false,\n      password: '',\n      formErrors: {username: '', password: ''},\n      passwordError: false\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.currentTarget.name]: event.currentTarget.value\n    })\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    let error = 0;\n    \n    let passwordValid = 0;\n     \n//      if (! this.state.email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n//          error = 1;\n//          console.log(\"email error\")\n//      }\n          //fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n      \n\n      if (this.state.password.length < 4) {\n          error = 1;\n          console.log(\"password error\")\n      }\n          //fieldValidationErrors.password = passwordValid ? '': ' is too short';\n         \n    if (error) {\n      this.setState({\n        passwordError: true\n      })\n    } else {  \n      \n     await this.login()\n\n\n      \n\n\n\n\n      //this.login()\n//      this.props.login()   //this goes back to main -- so do not call this yet\n    }\n  }\n\n login = async () => {\n    let data = \"\"\n    try {\n      //console.log(\"sdfsdfds\")\n      //const body = { username: this.state.email, password: this.state.password }\n      const body = `username=${this.state.username}&password=${this.state.password}`\n      const options = {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n          },\n          body: body             \n      } \n//      let url = `https://swgoh.gg/api/player/${code}/?format=json`\n//      let req = new Request(url); \n\n\n      let returnData = \"\";\n      returnData = await fetch('http://localhost:4000/login/c',options);\n      //returnData = await fetch(`https://swgoh.gg/api/ships/?format=json`, { mode: 'no-cors'});\n      //const response = await (fetch(req));\n      //const data = await response.json();\n      data = await returnData.text();\n      console.log(data);\n      //this.setState({ships: data, saved_ships_list: data });\n\n    }\n    catch(err) {\n      console.log(\"Error found\", err.name, err.message)\n\n    }\n\n    if (data === 'good') {\n      this.setState({\n        redirectToReferrer: false,\n        isAuthenticated: true\n      })\n      this.props.login(this.state.username)   //this goes back to main -- so do not call this yet\n\n    }else {\n      this.setState({\n        isAuthenticated: false,\n        redirectToReferrer: true\n      })\n\n      \n    }\n    \n\n\n\n//    fakeAuth.authenticate(() => {\n//        redirectToReferrer: true\n//      })\n//    })\n  }\n\n  render() {\n    const { from } = this.props.location.state || { from: { pathname: \"/\" } };\n    const { redirectToReferrer, username, password, isAuthenticated } = this.state;\n\n    if (redirectToReferrer) {\n      return <Redirect to='/login_bad' />;\n    }\n\n    if (isAuthenticated) {\n      return <Redirect to='/' />;\n    }\n\n    return (\n      <div className='login_page'>\n        <p>You must log in to Post Content</p>\n         <Container>\n            <Grid>\n            <Grid.Row centered>\n              <Grid.Column width={6}>\n\n  <Form onSubmit={this.handleSubmit}>\n            <Form.Input \n              error={this.state.emailError}\n              autoComplete=\"on\"\n              label=\"Username\" \n              type=\"text\" \n              placeholder='Username' \n              name=\"username\" \n              value={username} \n              onChange={this.handleChange} />\n              \n            <Form.Input\n              error={this.state.passwordError} \n              label=\"Password\" \n              type=\"password\" \n              placeholder='Password' \n              name=\"password\" \n              value={password} \n              onChange={this.handleChange} />\n <Segment basic textAlign='center'>          \n    <Button type='submit' color='blue'>Submit</Button></Segment>  \n  </Form>\n  </Grid.Column>\n  </Grid.Row>\n  </Grid>\n         </Container>      \n      </div>\n    );\n  }\n}\n\nconst fakeAuth = {\n  isAuthenticated: false,\n  authenticate(cb) {\n    this.isAuthenticated = true;\n    setTimeout(cb, 100); // fake async\n  },\n  signout(cb) {\n    this.isAuthenticated = false;\n    setTimeout(cb, 100);\n  }\n};\n\nconst PrivateRouteB = ({ component: Component, props:cProps, ...rest }) => (\n \n  <Route {...rest} render={props => <Component {...props} {...cProps} />} />\n\n);\n\nconst PrivateRouteC = ({ component: Component, props:{...cProps}, ...rest }) => (\n  //console.log(cProps),\n  <Route {...rest} render={props => <Component {...props} {...cProps} />} />\n\n);\n\nconst PrivateRoute = ({ component: Component, props:cProps, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      this.state.isAuthenticated ? (\n        <Component {...props} {...cProps}/>\n      ) : (\n        <Redirect\n          to={{\n            pathname: \"/login\",\n            state: { from: props.location }\n          }}\n        />\n      )\n    }\n  />\n);\n\nexport {\n    PrivateRoute,\n    PrivateRouteB,\n    PrivateRouteC,\n    fakeAuth,\n    Login\n}\n\n\n\n\n\n\n\n/*\n\n            <Form.Input \n              error={this.state.emailError}\n              autoComplete=\"on\"\n              label=\"Email\" \n              type=\"email\" \n              placeholder='Email' \n              name=\"email\" \n              value={email} \n              onChange={this.handleChange} />\n\n\n\n\n*/","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Sports from \"./sports\";\nimport GamesTitles from \"./gamesTitles\";\nimport MoviesTitles from \"./moviesTitles\";\nimport Signup from \"./Signup\";\n//import Stats from \"./Stats\";\n//import Login from \"./Login2\";\nimport NotFound from \"./Notfound\";\nimport {Login, PrivateRoute, PrivateRouteB, PrivateRouteC} from './Login'\nimport Movies from './movies'\nimport Games from './games'\n//import Login from \"./Login\";\n//import {Login, PrivateRoute, PrivateRouteB  } from './Login2'\n//import { Card, Icon, Image } from 'semantic-ui-react'\n\n\nexport default ({childProps}) =>\n  \n  <Switch>\n    <PrivateRouteB path=\"/\" exact component={Home} props={childProps}/>\n    <Route path=\"/sports\" exact component={Sports} />\n    <PrivateRouteB path=\"/movies\" exact component={MoviesTitles} props={childProps}/>\n    <PrivateRouteB path=\"/movies/:topicId\" component={Movies} props={childProps}/>\n    <PrivateRouteB path=\"/games\" exact component={GamesTitles} props={childProps}/>\n    <PrivateRouteB path=\"/games/:topicId\" component={Games} props={childProps}/>\n    \n    <PrivateRouteB path=\"/login\" component={Login} props={childProps} />\n    <Route path=\"/signup\" component={Signup} />\n    <Route component={NotFound} />  \n  </Switch>;\n\n\n  /*\n\n\n  \n<Route path=\"/movies/:topicId\" render={()=><Movies num=\"2\" someProp={100}/>}/>\n  */","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\n//import {Login, PrivateRoute, fakeAuth, AuthButton  } from './Routes/Login'\n//import Ships from './Routes/Ships'\nimport { Nav, Navbar, NavItem, NavDropdown, MenuItem, ProgressBar} from \"react-bootstrap\";\n//import { LinkContainer } from 'react-router-bootstrap';\nimport Routes from \"./Routes\";\nimport { Button, Icon, Popup, Grid, Container, List, Segment, Header, Divider, Transition } from 'semantic-ui-react'\nimport '../css/main.css'\nimport { fakeAuth  } from './Login'\n//import me from '../pics/businessman.png';\n//import { fakeAuth  } from '../Routes/Login2'\n//import { Button, Container, Divider, Grid, Header, Icon, Image, List, Menu, Responsive, Segment, Sidebar, Visibility} from 'semantic-ui-react'\n\n\n\n\n\nexport default class Main extends Component {\n\tconstructor(props) {\n\t    super(props)\n\t    this.state = {\n\t    \tactiveItem: 'home',\n\t    \tvisible: true,\n\t    \tlogin: true,\n\t    \tsignup: true,\n\t    \ttalk_sports: true,\n\t    \tgames: true,\n\t    \tmovies: true,\n\t    \thome_main: true,\n\t    \tlogged: false,\n\t    \tusername: '',\n\t      \tout: false\n\t    }   \n\t}\n\n\n\thandleItemClick = (event) => {\n\t\tthis.setState({ activeItem: event.currentTarget.name})\n\t\tthis.setState({ [event.currentTarget.name]: !this.state[event.currentTarget.name] })\n\t}\n\t\n\n\tlogin = (user) => {\n\t    this.setState({\n\t      logged: true, \n\t      username: user\n\t    })\n\t  }\n\n\thandleLogout = async event => {\n\t  //await Auth.signOut();\n\t  fakeAuth.signout();\n\t  this.setState({\n\t      out: true\n\t    })\n\t}\n\n\n\n    render() {\n    \t//const { fixed } = this.state\n    \t\tconst childProps = {\n\t\t  logged: this.state.logged,\n\t\t  login: this.login,\n\t\t  username: this.state.username\n\t\t};\n\n\t\tif (this.state.out === true) {\n\t   \t\treturn <Main />;\n\t\t}\n\n\treturn (\n\n\t\t\t<React.Fragment>\n\t\t\t<header>\n\t  \t\t\t<Navbar expand=\"lg\" variant=\"dark\" className=\"navbar\">\n\t\t<div className=\"hover2\">\n<Transition animation='jiggle' duration='250' visible={this.state.home_main} >\t \t \t\t\t\t\n\t\t\t\t\t\t<Navbar.Brand onClick={this.handleItemClick} name=\"home_main\" active={this.state.activeItem ? 'home_main' : undefined} as={Link} to='/'>\n\t      \t\t\n\t      \t\t\t\t\t{' MeanIT '}\n\t    \t\t\t\t</Navbar.Brand>\n</Transition>\n</div>\t\t\t\t\t\n\t   \n\t \t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t  \t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t    \t\t\t\n\t    \t\t\t<Nav fill className=\"navbar-nav mx-auto\" >\n\n    \t\t\t\t\n\t      \t\t\t\t<div className=\"hover\">\n<Transition animation='jiggle' duration='250' visible={this.state.talk_sports} >\n\t      \t\t\t\t<Nav.Link onClick={this.handleItemClick} name=\"talk_sports\" active={this.state.activeItem === 'talk_sports'} className=\"nav-link-custom\" as={Link} to='/sports'>Talk Sports</Nav.Link>\n</Transition>\n\t      \t\t\t\t</div>\n\t      \t\t\t\t<div className=\"hover\">\n<Transition animation='jiggle' duration='250' visible={this.state.games} >\n\t      \t\t\t\t<Nav.Link onClick={this.handleItemClick} name=\"games\" active={this.state.activeItem === 'games'} className=\"nav-link-custom\" as={Link} to='/games'>Video Games</Nav.Link>\n</Transition>\n\t      \t\t\t\t</div>\n\n\t      \t\t\t\t<div className=\"hover\">\n<Transition animation='jiggle' duration='250' visible={this.state.movies} >\n\t      \t\t\t\t<Nav.Link onClick={this.handleItemClick} name=\"movies\" active={this.state.activeItem === 'movies'} className=\"nav-link-custom\" as={Link} to='/movies'>Movies</Nav.Link>\n</Transition>\n\t      \t\t\t\t</div>\n\t    \t\t\t</Nav>\n\t    \t\t<Nav>\n\n\t      \t\t\t\t{this.state.logged ? \n\t      \t\t\t\t\t<Nav.Link>\n\t              \t\t\t\t<NavItem onClick={this.handleLogout}>Logout</NavItem>\n\t              \t\t\t</Nav.Link>\n\t  \t\t\t\t\t\t: <div className=\"hover\">\n<Transition animation='jiggle' duration='250' visible={this.state.login} >\t      \t\t\t\t\n<Nav.Link onClick={this.handleItemClick} name=\"login\" active={this.state.activeItem === 'login'} className=\"nav-link-custom\" as={Link} to='/login'>Login</Nav.Link>\n</Transition>\n\t      \t\t\t\t</div>\n\t\t\t\t\t\t}\n\n\t      \t\t\t\t<div className=\"hover\">\n<Transition animation='jiggle' duration='250' visible={this.state.signup} >\t      \t\t\t\t\n<Nav.Link onClick={this.handleItemClick} name=\"signup\" active={this.state.activeItem === 'signup'} className=\"nav-link-custom\" as={Link} to='/signup'>Sign Up</Nav.Link>\n</Transition>\n\t      \t\t\t\t</div>\t  \n\n    </Nav>\n\t    \t\t</Navbar.Collapse>\n\t  \t\t\t</Navbar>\n\n</header>\n\t\t\t\n\t\t\t\t<Routes childProps={childProps}/> \n\n<footer>\n<Segment className=\"footer-bar\" inverted vertical>\n      <Container className='footer-container'>\n        <Grid divided stackable className='footer-grid'>\n          <Grid.Row>\n            <Grid.Column width={4}>\n              <Header as='h4' className='footer-header' content='Social Links' />\n              \n\n              <div className='p-footer'>\n        <Popup\n          trigger={<Button circular className=\"icons\" icon='envelope outline' href=\"mailto:pittpir@gmail.com\"/>}\n          content='Email the Author! (send gifts too)'\n          position='bottom left'\n        />\n\n        <Popup\n          trigger={<Button circular className=\"icons\" icon='linkedin' href=\"https://www.linkedin.com/in/pittpir/\" target=\"_blank\"/>}\n          content='Travel to my linkedin Page'\n          position='bottom left'\n        />\n\n        <Popup\n          trigger={<Button circular className=\"icons\" icon='github' href=\"https://github.com/pittpir\" target=\"_blank\"/>}\n          content='Enter the Github Dimension Page'\n          position='bottom left'\n        />  \n        </div>\n\n            </Grid.Column>\n            <Grid.Column width={12}>\n              <Header as='h4' className='footer-header'>What is MeanIT?</Header>\n              <p className='p-footer'>\n                MeanIT is an off shot of reddit where users can discuss, talk, engage in various topics.  \n                What ever you say you Mean IT!  You stand behind your word 110%!  \n\n\n              </p>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </Segment>\n</footer>\n\n\n\n\n\t\t\t\t</React.Fragment>\n\n\n\t\t\t\n\n\n\t      \n\t    )\n\t}\n}","import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport Main from './routes/Main'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n       \n          <Main />\n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport 'semantic-ui-css/semantic.min.css';\n\n\nReactDOM.render(\n\t<Router>\n\t<App />\n\t</Router>, \n\tdocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}